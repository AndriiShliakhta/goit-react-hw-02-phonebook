{"version":3,"sources":["ContactForm/ContactForm.js","ContactList/ContactListItem/ContactListItem.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","evt","preventDefault","existingContact","props","contacts","find","contact","alert","addContact","this","action","onSubmit","type","pattern","title","required","onChange","Component","ContactListItem","ContactList","filteredNames","filter","toLowerCase","includes","searchName","map","id","Filter","App","prev","uuidv4","findContact","e","length","ReactDOM","render","document","getElementById"],"mappings":"6PAIMA,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAEJC,E,4MACJC,M,eAAaJ,G,EAEbK,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,aAAe,SAAAC,GACbA,EAAIC,iBAEJ,IAAMC,EAAkB,EAAKC,MAAMC,SAASC,MAAK,SAAAC,GAC/C,OAAOA,EAAQf,OAAS,EAAKG,MAAMH,QAGjCW,EACFK,MAAM,WAAaL,EAAgBX,KAAO,6BAG5C,EAAKY,MAAMK,WAAW,EAAKd,OAC3B,EAAKI,SAAL,eAAmBR,M,4CAGrB,WACE,MAAyBmB,KAAKf,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMkB,OAAO,GAAGC,SAAUF,KAAKV,aAA/B,UACE,yCAEE,uBACEa,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRlB,MAAON,EACPyB,SAAUP,KAAKd,kBAGnB,uBACA,2CAEE,uBACEiB,KAAK,MACLrB,KAAK,SACLsB,QAAQ,yFACRhB,MAAOL,EACPsB,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKd,kBAGnB,uBAEA,wBAAQiB,KAAK,SAAb,gC,GAvDkBK,aA4DXxB,I,QCxDAyB,EAVS,SAAC,GAAsB,IAApB3B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/B,OACE,6BACE,8BACGD,EADH,KACWC,QCHX2B,E,4MACJC,cAAgB,WACd,OAAO,EAAKjB,MAAMC,SAASiB,QAAO,YAChC,OAD8C,EAAX9B,KACvB+B,cAAcC,SAAS,EAAKpB,MAAMqB,WAAWF,mB,4CAI7D,WACE,OACE,6BACGb,KAAKW,gBAAgBK,KAAI,gBAAGC,EAAH,EAAGA,GAAInC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACxB,cAAC,EAAD,CAA0BD,KAAMA,EAAMC,OAAQA,GAAxBkC,Y,GAXNT,aAkBXE,ICAAQ,EAjBA,SAAC,GAAc,IAAZtB,EAAW,EAAXA,KAChB,OACE,mCACE,0DAEE,uBACEO,KAAK,OACLrB,KAAK,SACLsB,QAAQ,yHACRC,MAAM,kcAENE,SAAUX,UCTduB,E,4MACJlC,MAAQ,CACNU,SAAU,CACR,CAAEsB,GAAI,OAAQnC,KAAM,MAAOC,OAAQ,aACnC,CAAEkC,GAAI,OAAQnC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEkC,GAAI,OAAQnC,KAAM,OAAQC,OAAQ,aACpC,CAAEkC,GAAI,OAAQnC,KAAM,iBAAkBC,OAAQ,cAEhD6B,OAAQ,I,EAGVb,WAAa,SAAAF,GACX,EAAKR,UAAS,SAAA+B,GAAI,MAAK,CACrBzB,SAAS,GAAD,mBAAMyB,EAAKzB,UAAX,4BAA0BE,GAA1B,IAAmCoB,GAAII,uB,EAGnDC,YAAc,SAAAC,GACZ,EAAKlC,SAAS,CAAEuB,OAAQW,EAAEpC,OAAOC,S,4CAGnC,WACE,OACE,qCACE,2CACA,cAAC,EAAD,CACEO,SAAUK,KAAKf,MAAMU,SACrBI,WAAYC,KAAKD,aAEnB,0CACA,cAAC,EAAD,CAAQH,KAAMI,KAAKsB,cAElBtB,KAAKf,MAAMU,SAAS6B,OAAS,GAC5B,cAAC,EAAD,CACE7B,SAAUK,KAAKf,MAAMU,SACrBoB,WAAYf,KAAKf,MAAM2B,gB,GAlCjBJ,aA0CHW,I,YC3CfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.01bbbfe4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import styles from './ContactForm.module.css';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const existingContact = this.props.contacts.find(contact => {\r\n      return contact.name === this.state.name;\r\n    });\r\n\r\n    if (existingContact) {\r\n      alert('Contact ' + existingContact.name + ' is already in contacts.');\r\n      return;\r\n    }\r\n    this.props.addContact(this.state);\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form action=\"\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            value={number}\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n// ContactForm.propTypes = {\r\n//   goodfeedback: PropTypes.number,\r\n//   neutralfeedback: PropTypes.number,\r\n//   badfeedback: PropTypes.number,\r\n// };\r\n","import React from 'react';\r\n\r\nconst ContactListItem = ({ name, number }) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { Component } from 'react';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\n\r\nclass ContactList extends Component {\r\n  filteredNames = () => {\r\n    return this.props.contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(this.props.searchName.toLowerCase());\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.filteredNames().map(({ id, name, number }) => (\r\n          <ContactListItem key={id} name={name} number={number} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n// import styles from './Profile.module.css';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ find }) => {\r\n  return (\r\n    <>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          //   value={filter}\r\n          onChange={find}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n// Phonebook.propTypes = {\r\n//   goodfeedback: PropTypes.number,\r\n//   neutralfeedback: PropTypes.number,\r\n//   badfeedback: PropTypes.number,\r\n// };\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'ros', number: '459-12-56' },\r\n      { id: 'id-2', name: 'hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'eden', number: '645-17-79' },\r\n      { id: 'id-4', name: 'annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = contact => {\r\n    this.setState(prev => ({\r\n      contacts: [...prev.contacts, { ...contact, id: uuidv4() }],\r\n    }));\r\n  };\r\n  findContact = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          contacts={this.state.contacts}\r\n          addContact={this.addContact}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter find={this.findContact} />\r\n\r\n        {this.state.contacts.length > 0 && (\r\n          <ContactList\r\n            contacts={this.state.contacts}\r\n            searchName={this.state.filter}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}