{"version":3,"sources":["Phonebook/Phonebook.js","Contacts/Contacts.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","Phonebook","state","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","addContact","reset","action","onSubmit","this","type","pattern","title","required","onChange","Component","Contacts","contacts","console","log","map","contact","id","App","prev","uuidv4","length","ReactDOM","render","document","getElementById"],"mappings":"6PAIMA,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAEJC,E,4MACJC,M,eAAaJ,G,EAEbK,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,aAAe,SAAAC,GACbA,EAAIC,iBACJ,EAAKC,MAAMC,WAAW,EAAKT,OAC3B,EAAKU,S,EAEPA,MAAQ,WACN,EAAKN,SAAL,eAAmBR,K,4CAGrB,WAEE,OACE,mCACE,uBAAMe,OAAO,GAAGC,SAAUC,KAAKR,aAA/B,UACE,yCAEE,uBACES,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOU,KAAKb,MAAMH,KAClBqB,SAAUL,KAAKZ,kBAGnB,uBACA,2CAEE,uBACEa,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRZ,MAAOU,KAAKb,MAAMF,OAClBkB,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKZ,kBAGnB,uBAEA,wBAAQa,KAAK,SAAb,kC,GAjDcK,aAuDTpB,I,QC5CAqB,EAjBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAElB,OADAC,QAAQC,IAAIF,GAEV,mCACE,6BACGA,EAASG,KAAI,SAAAC,GAAO,OACnB,6BACE,8BACGA,EAAQ5B,KADX,KACmB4B,EAAQ3B,WAFpB2B,EAAQC,YCHrBC,E,4MACJ3B,MAAQ,CACNqB,SAAU,I,EAGZZ,WAAa,SAAAgB,GACX,EAAKrB,UAAS,SAAAwB,GAAI,MAAK,CACrBP,SAAS,GAAD,mBAAMO,EAAKP,UAAX,4BAA0BI,GAA1B,IAAmCC,GAAIG,uB,4CAInD,WACE,OACE,qCACE,cAAC,EAAD,CACER,SAAUR,KAAKb,MAAMqB,SACrBZ,WAAYI,KAAKJ,aAGlBI,KAAKb,MAAMqB,SAASS,OAAS,GAC5B,cAAC,EAAD,CAAUT,SAAUR,KAAKb,MAAMqB,kB,GApBvBF,aA2BHQ,I,YC3BfI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d8295748.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import styles from './Profile.module.css';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass Phonebook extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    // const { goodfeedback, neutralfeedback, badfeedback } = this.state;\r\n    return (\r\n      <>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              value={this.state.number}\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Phonebook;\r\n// Phonebook.propTypes = {\r\n//   goodfeedback: PropTypes.number,\r\n//   neutralfeedback: PropTypes.number,\r\n//   badfeedback: PropTypes.number,\r\n// };\r\n","import React from 'react';\r\n\r\nconst Contacts = ({ contacts }) => {\r\n  console.log(contacts);\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(contact => (\r\n          <li key={contact.id}>\r\n            <p>\r\n              {contact.name}: {contact.number}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from 'react';\r\nimport Phonebook from './Phonebook/Phonebook';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Contacts from './Contacts/Contacts';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n  };\r\n\r\n  addContact = contact => {\r\n    this.setState(prev => ({\r\n      contacts: [...prev.contacts, { ...contact, id: uuidv4() }],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Phonebook\r\n          contacts={this.state.contacts}\r\n          addContact={this.addContact}\r\n        />\r\n\r\n        {this.state.contacts.length > 0 && (\r\n          <Contacts contacts={this.state.contacts} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}